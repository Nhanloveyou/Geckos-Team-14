{"version":3,"sources":["Component/Background/images/scene1.jpg","Component/Background/images/scene2.jpg","Component/Background/images/scene4.jpg","Component/Background/images/scene5.jpg","Component/Background/images/scene6.jpg","Component/Background/images/scene7.jpg","Component/Background/images/scene8.jpg","Component/Background/images/scene9.jpg","Component/Background/images/dragon.jpg","Component/Background/images/sunset.jpg","Component/BoardNav/BoardTitleMenu.js","Component/Background/BackgroundSelection.js","Component/Background/BackgroundType.js","Component/MainMenu.js","Component/Team.js","Component/BoardNav/BoardNav.js","Component/TrelloNav.js","Component/Card/CardForm.js","Component/Card/ListItem.js","Component/Card/CheckList.js","Component/CardModal/CardModal.js","actions/cardActions.js","actions/types.js","Component/Card/Card.js","actions/listActions.js","Component/List/ListMenu.js","Component/List/List.js","App.js","actions/dragAndDropActions.js","serviceWorker.js","reducers/CardListReducer.js","reducers/index.js","store.js","index.js","Component/Background/images/scene3.jpg"],"names":["module","exports","__webpack_require__","p","BoardTitleMenu","_ref","handleShowMenu","handleNameSubmit","placeholder","title","inputLabel","buttonLabel","react_default","a","createElement","className","onClick","onSubmit","type","name","backgrounds","Colors","Images","Scene1","Scene2","Scene3","Scene4","Scene5","Scene6","Scene7","Scene8","Scene9","Dragon","Sunset","BackgroundSelection","state","setBackground","newBackground","_this","props","handleBackgroundChange","_this2","this","colorMenu","map","key","style","backgroundColor","concat","imageMenu","backgroundImage","Component","BackgroundType","handleColorMenu","toggleOptionsMenu","handleImageMenu","toggleImageMenu","changeBackground","Background_BackgroundSelection","backgroundType","menuTitles","MainMenu","menuTitle","TypeMenuTitle","toggleMenuControl","setState","toggleBackgroundMenu","prevState","handleBackgroundColor","handleBackgroundImage","render","MMisOpen","Background_BackgroundType","toggleCloseButton","index_es","icon","faTimes","React","Team","teamMembers","member","id","deleteMember","initials","BoardNav","BoardName","showNameMenu","inviteMember","starColor","team","e","preventDefault","newName","target","elements","value","inputLength","length","alert","handleInviteMember","handleMemberSubmit","newMember","abbreviate","nameAbbr","split","charAt","join","handleMemberAdd","newMem","uuid","replace","push","window","confirm","newMembers","filter","toggleYellow","_this$state","build_default","parent","prefix","Component_MainMenu","menuState","color","Component_Team","BoardNav_BoardTitleMenu","TrelloNav","CardForm","cardVal","handleCardValChange","addToCard","toggleCardForm","rows","onChange","ListItem","isEditable","textValue","itemPosition","componentDidMount","item","onClickTextField","onChangeTextField","handleTextFormSubmit","index","complete","onDeleteCheckListItem","editedChecklistItem","editCheckListItem","_this$props","onToggleCheckBox","checked","CheckList","addingNewItem","editingTitle","checkListTitle","checkList","handleTitleSubmitForm","changeCheckListTitle","addNewCheckListItem","listItem","addCheckListItem","onChangeTitleForm","toggleCheckListTitle","toggleNewItem","deleteCheckList","checkListExists","tasks","progressPct","items","tasksDone","reduce","acc","parseInt","_calculatePercent","percentageComplete","width","checklistItem","Card_ListItem","addItem","dateStyle","height","CardModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDateChange","createdAt","editedCard","objectSpread","card","dueDate","editCard","onCalendarFocusChange","focused","calendarFocused","createNewCheckList","cardId","itemToAdd","toConsumableArray","newCheckList","position","editedCheckList","currIndex","toggledCheckListItem","editedCheckListItem","handleDescriptionChange","description","submitDescription","isSubmitted","isEdit","editDescription","descripton","currentDate","moment","isModalOpen","toggleModal","list","content","display","isBefore","format","autoFocus","onFocus","val","defaultValue","Card_CheckList","disabled","react_dates","readOnly","date","onFocusChange","hideKeyboardShortcutsPanel","numberOfMonths","isOutsideRange","deleteCard","connect","cardName","Card","react","react_beautiful_dnd_esm","draggableId","provided","assign","draggableProps","dragHandleProps","ref","innerRef","Component_CardModal_CardModal","disableInteractiveElementBlocking","isDragDisabled","deleteList","ListMenu","menuDisplay","titleName","handleToggleListMenu","node","contains","toggleListMenu","displayCopyList","onCopyTitleChange","listId","copyList","document","addEventListener","removeEventListener","idToCopy","arguments","undefined","List","showCardForm","listMenuOpen","handleSaveTitle","taskIds","prevProps","toggleTitleForm","saveListTitle","addCard","_this$props$list","cardList","handleListTitleChange","List_ListMenu","droppableId","droppableProps","Card_Card","Card_CardForm","titleText","cardContent","App","styleType","addList","onDragEnd","result","destination","source","handleDragAndDrop","_this$props$state$sta","lists","cards","listOrder","Component_TrelloNav","Component_BoardNav_BoardNav","direction","Component_List_List","payload","Boolean","location","hostname","match","initialState","combineReducers","action","newList","defineProperty","newListOrder","newCards","forEach","taskId","newLists","indexOf","splice","listCopy","_copyCards","cardsToCopy","copyCards","slice","newCard","hasOwnProperty","newTaskIds","task","_objectSpread4","_action$payload","Array","from","home","foreign","newCardIds","homeTaskIds","newHome","foreignTaskIds","newForegin","persistedState","serializedState","localStorage","getItem","JSON","parse","console","log","loadFromLocalStorage","store","createStore","rootReducer","compose","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b4a8feb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scene1.03811d32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene2.1d01566a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene4.c3461ca4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene5.133f90dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene6.cf2b528c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene7.a33cadf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene8.c17ddaef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene9.caa6d43a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.d1049b7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.de0fc6d3.jpg\";","import React from \"react\";\n// import { prependOnceListener } from \"cluster\";\n\n// const menuLabels = {\n//   title: 'RenameBoard',\n//   inputLabel: 'Name',\n//   placeholder: BoardName,\n//   buttonLabel: 'Rename'\n// }\n\n\nconst BoardTitleMenu = ({\n  \n  handleShowMenu,\n  handleNameSubmit,\n  \n  placeholder,\n  title,\n  inputLabel,\n  buttonLabel\n\n}) => (\n    <div className=\"board-menu\">\n      <div className=\"board-menu--header\">\n        <h2 className=\"board-menu--title\">{title}</h2>\n        <button className=\"board-menu--x\" onClick={handleShowMenu}><i className=\"fas fa-times\"></i></button>\n      </div>\n\n      <div className=\"board-menu--form\">\n        <form onSubmit={handleNameSubmit}>\n          <label>{inputLabel}</label>\n          <input\n            className=\"board-menu--input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder={placeholder}\n          />\n          <button className=\"menu-btn button-green\">{buttonLabel}</button>\n        </form>\n      </div>\n    </div>\n  );\n\nexport default BoardTitleMenu;\n","import React, { Component } from \"react\";\n\nimport Scene1 from './images/scene1.jpg';\nimport Scene2 from './images/scene2.jpg';\nimport Scene3 from './images/scene3.jpg';\nimport Scene4 from './images/scene4.jpg';\nimport Scene5 from './images/scene5.jpg';\nimport Scene6 from './images/scene6.jpg';\nimport Scene7 from './images/scene7.jpg';\nimport Scene8 from './images/scene8.jpg';\nimport Scene9 from './images/scene9.jpg';\nimport Dragon from './images/dragon.jpg';\nimport Sunset from './images/sunset.jpg';\n\nlet backgrounds = {\n    Colors: ['#3D348B', '#7678ED', '#F7B801', '#F18701', '#F35B04', '#119DA4', '#19647E'],\n    Images: [Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9, Dragon, Sunset],\n}\n\nclass BackgroundSelection extends Component {\n    state = {\n\n    };\n\n\n    setBackground = (newBackground) => { this.props.handleBackgroundChange(newBackground)}\n\n    render() {\n\n        return (\n            <div>\n                <div className={(this.props.colorMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\n                    {backgrounds.Colors.map((newBackground) =>\n                        <div className=\"background-options\" key={newBackground}>\n                            <div className=\"background-option--wrapper\">\n                                <div\n                                    style={{ backgroundColor: `${newBackground}` }}\n                                    className=\"background-options background-option\"\n                                    onClick={() => this.setBackground(newBackground)}\n                                >\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <div className={(this.props.imageMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\n                    {backgrounds.Images.map((newBackground) =>\n                        <div className=\"background-options\" key={newBackground}>\n                            <div className=\"background-option--wrapper\">\n                                <div\n                                    style={{ backgroundImage: `url(${newBackground})` }}\n                                    className=\"background-options background-option\"\n                                    onClick={() => this.setBackground(newBackground)}\n                                >\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n\n \n\n\n            </div>\n\n        )\n    }\n}\n\nexport default BackgroundSelection;\n\n// <div className={(this.props.colorMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\n// {backgrounds.Colors.map((backgroundColor) =>\n//     <div className=\"background-options\" key={backgroundColor}>\n//         <div className=\"background-option--wrapper\">\n//             <div\n//                 style={{ backgroundColor }}\n//                 className=\"background-options background-option\"\n//                 onClick={() => this.setBackground(backgroundColor)}\n//             >\n//             </div>\n//         </div>\n//     </div>\n// )}\n// </div>\n// <div className={(this.props.imageMenu) ? \"background-options-main background-options-main-show\" : \"background-options-main background-options-main-hide\"}>\n// {backgrounds.Images.map((backgroundImage) =>\n//     <div className=\"background-options\" key={backgroundImage}>\n//         <div className=\"background-option--wrapper\">\n//             <div\n//                 style={{ backgroundImage: `url(${backgroundImage})` }}\n//                 className=\"background-options background-option\"\n//                 onClick={() => this.setBackground(backgroundImage)}\n//             >\n//             </div>\n//         </div>\n//     </div>\n// )}\n// </div>","import React, { Component } from \"react\";\nimport BackgroundSelection from './BackgroundSelection.js';\nimport Scene3 from './images/scene3.jpg';\n\nclass BackgroundType extends Component {\n    state = {\n        \n    };\n\n    handleColorMenu = () => {    \n        this.props.toggleOptionsMenu();\n    }\n    \n    handleImageMenu = () => {\n        this.props.toggleImageMenu(); \n    }\n\n    \n\n    render() {\n    \n        return (\n            <div className={this.props.changeBackground ? \"background-menu-main background-menu-main-show\" : \"background-menu-main background-menu-main-hide\"}>\n            <BackgroundSelection \n                colorMenu={this.props.colorMenu} \n                imageMenu={this.props.imageMenu}\n                backgroundType={this.state.backgroundType}\n                handleBackgroundChange={this.props.handleBackgroundChange}\n                />    \n            <div className=\"background-types\">\n                    <div className=\"background-types--wrapper\"><div onClick={this.handleColorMenu} className=\"background-menu background-menu--colors\"></div><h3>Colors</h3></div>\n                    <div className=\"background-types--wrapper\"><div onClick={this.handleImageMenu} className=\"background-menu background-menu--images\" style={{backgroundImage: `url(${Scene3})`}}></div><h3>Photos</h3></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BackgroundType;","import React from \"react\";\nimport BackgroundType from \"./Background/BackgroundType.js\";\n\n// import { library, config } from '@fortawesome/fontawesome-svg-core'; config.autoAddCss = false;\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst menuTitles = [\"Menu\", \"Change Background\", [\"Colors\", \"Photos\"]];\n\nclass MainMenu extends React.Component {\n  state = {\n    menuTitle: menuTitles[0],\n    TypeMenuTitle: true,\n\n    changeBackground: false,\n\n    colorMenu: false,\n    imageMenu: false\n  };\n\n  toggleMenuControl = () => {\n    if (this.state.colorMenu || this.state.imageMenu) {\n      this.setState(() => ({\n        colorMenu: false,\n        imageMenu: false\n      }));\n    } else this.toggleBackgroundMenu();\n  };\n\n  //closes and opens the type menu\n  toggleBackgroundMenu = () => {\n    //arrow shows when type menu and option menus are open\n    this.setState(prevState => ({\n      changeBackground: !prevState.changeBackground,\n      menuTitle: prevState.changeBackground ? \"Menu\" : \"Change Background\"\n    }));\n  };\n\n  //closes and opens the color options menu\n  toggleOptionsMenu = () => {\n    this.setState(prevState => ({\n      colorMenu: !prevState.colorMenu,\n      menuTitle: !prevState.colorMenu ? \"Colors\" : \"Change Background\"\n    }));\n    this.props.handleBackgroundColor();\n  };\n\n  //closes and opens the image options menu\n  toggleImageMenu = () => {\n    this.setState(prevState => ({\n      imageMenu: !prevState.colorMenu,\n      menuTitle: !prevState.imageMenu ? \"Photos\" : \"Change Background\"\n    }));\n    this.props.handleBackgroundImage();\n  };\n\n  // updateMenuTitle = () => {\n\n  // };\n\n  render = () => {\n    return (\n      <div\n        className={\n          this.props.MMisOpen\n            ? \"main-menu__wrapper\"\n            : \"main-menu__wrapper--hide\"\n        }\n      >\n        <div\n          className={\n            this.props.MMisOpen\n              ? \"main-menu main-menu--show\"\n              : \"main-menu main-menu--hide \"\n          }\n        >\n          <BackgroundType\n            changeBackground={this.state.changeBackground}\n            toggleOptionsMenu={this.toggleOptionsMenu}\n            toggleImageMenu={this.toggleImageMenu}\n            colorMenu={this.state.colorMenu}\n            imageMenu={this.state.imageMenu}\n            handleBackgroundChange={this.props.handleBackgroundChange}\n            handleBackgroundColor={this.props.handleBackgroundColor}\n            handleBackgroundImage={this.props.handleBackgroundImage}\n          />\n          <div className=\"main-menu__section\">\n            {this.state.changeBackground ? (\n              <button\n                className=\"main-menu-arrow main-menu-arrow-show\"\n                onClick={this.toggleMenuControl}\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n            ) : (\n              <button\n                className=\"main-menu-arrow main-menu-arrow-hide\"\n                onClick={this.toggleMenuControl}\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n            )}\n\n            <h2 className=\"main-menu__title\">{this.state.menuTitle}</h2>\n            <button\n              className=\"btn--close-menu\"\n              onClick={this.props.toggleCloseButton}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div className=\"main-menu__section\">\n            <ul className=\"options__list\">\n              <li\n                className=\"option__item icon__item\"\n                onClick={this.toggleBackgroundMenu}\n              >\n                <i className=\"fas fa-brush menu-icon\"></i>Change Background\n              </li>\n              <li className=\"option__item icon__item\">\n                <i className=\"fas fa-filter menu-icon\"></i>Filter Cards\n              </li>\n              <li className=\"option__item icon__item\">\n                <i className=\"fas fa-fill menu-icon\"></i>Stickers\n              </li>\n              <li className=\"option__item icon__item\">\n                <i className=\"fas fa-ellipsis-h menu-icon\"></i>More\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-menu__section\">\n            <h3 className=\"activity-menu__title icon__item\">\n              <i className=\"fas fa-tasks menu-icon\"></i>Activity\n            </h3>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default MainMenu;\n","import React, { Component } from \"react\";\n\nclass Team extends Component {\n    state = {\n\n    }\n\n    render() {\n\n\n\n        return (\n            <div className=\"full-team-members\">\n\n                {this.props.teamMembers.map((member) =>\n                    <div className=\"team-member\" key={member.id} onClick={() => this.props.deleteMember(member.id)}>\n                        {member.initials}\n                    </div>\n                )}\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default Team;","import React, { Component } from \"react\";\nimport BoardTitleMenu from \"./BoardTitleMenu.js\";\nimport MainMenu from \"../MainMenu.js\";\nimport Team from \"../Team.js\";\nimport uuid from \"uuid\";\nimport SimpleStorage from \"react-simple-storage\";\n\nclass BoardNav extends Component {\n  state = {\n    BoardName: \"Add Board Name\",\n\n    showNameMenu: false,\n    inviteMember: false,\n\n    MMisOpen: false,\n    starColor: \"white\",\n\n    team: [\n      {\n        id: \"nr\",\n        name: \"Natalie Roode\",\n        initials: \"NR\"\n      },\n      {\n        id: \"cf\",\n        name: \"Carlos Fins\",\n        initials: \"CF\"\n      },\n      {\n        id: \"jg\",\n        name: \"Juan Garcia\",\n        initials: \"JG\"\n      },\n      {\n        id: \"ph\",\n        name: \"Paul Hong\",\n        initials: \"PH\"\n      }\n    ]\n  };\n\n  // -- handle main menu --\n\n  toggleCloseButton = e => {\n    e.preventDefault();\n    this.setState(prevState => ({\n      MMisOpen: !prevState.MMisOpen\n    }));\n  };\n\n  // -- update board name menu --\n  handleShowMenu = () => {\n    const { showNameMenu } = this.state;\n    this.setState({\n      showNameMenu: !showNameMenu\n    });\n  };\n\n  // -- handle board name submission --\n  handleNameSubmit = e => {\n    e.preventDefault();\n    const newName = e.target.elements.name.value;\n    const inputLength = newName.length;\n    if (inputLength === 0) {\n      alert(\"please enter a name\");\n    } else if (inputLength !== 0) {\n      this.setState({\n        BoardName: newName,\n        showNameMenu: false\n      });\n    }\n  };\n\n  // -- update member invite menu ---\n  handleInviteMember = () => {\n    const { inviteMember } = this.state;\n    this.setState({\n      inviteMember: !inviteMember\n    });\n  };\n\n  // -- handle member add submission --\n  handleMemberSubmit = e => {\n    e.preventDefault();\n    var newMember = e.target.elements.name.value;\n    const inputLength = newMember.length;\n    if (inputLength === 0) {\n      alert(\"please enter a name\");\n    } else if (inputLength !== 0) {\n      this.abbreviate(newMember);\n      // let updateTeam = []\n    }\n  };\n\n  abbreviate = newMember => {\n    let nameArr = newMember.split(\" \").map(name => name.charAt(0));\n    let nameAbbr = nameArr.join(\"\");\n    this.handleMemberAdd(newMember, nameAbbr);\n  };\n\n  handleMemberAdd = (newMember, nameAbbr) => {\n    const { team } = this.state;\n    // generate member id\n    const memId = uuid().replace(/-/g, \"\");\n    // add a new member\n    const newMem = {\n      id: memId,\n      name: newMember,\n      initials: nameAbbr\n    };\n\n    team.push(newMem);\n    this.setState({\n      team,\n      inviteMember: false\n    });\n  };\n\n  // ------ delete member -------\n  deleteMember = id => {\n    const { team } = this.state;\n    const willDelete = window.confirm(\"Remove this team member?\");\n\n    if (willDelete) {\n      const newMembers = team.filter(member => member.id !== id);\n      this.setState({ team: newMembers });\n    }\n  };\n\n  toggleYellow = () => {\n    this.setState(prevState => ({\n      starColor: prevState.starColor === \"#f2d600\" ? \"white\" : \"#f2d600\"\n    }));\n  };\n\n  render() {\n    const { showNameMenu, BoardName, inviteMember } = this.state;\n    return (\n      <div className=\"board-nav-wrapper\">\n        <SimpleStorage parent={this} prefix={\"TrelloClone\"} />\n        <MainMenu\n          menuState={false}\n          MMisOpen={this.state.MMisOpen}\n          toggleCloseButton={this.toggleCloseButton}\n          handleBackgroundChange={this.props.handleBackgroundChange}\n          handleBackgroundColor={this.props.handleBackgroundColor}\n          handleBackgroundImage={this.props.handleBackgroundImage}\n        />\n        <div className=\"board-nav\">\n          <div className=\"menu-wrapper\">\n            <button\n              onClick={this.handleShowMenu}\n              className=\"btn-nav board-nav--title\"\n            >\n              {BoardName}\n            </button>\n            <button\n              className=\"btn-nav board-star\"\n              onClick={this.toggleYellow}\n              style={{ color: `${this.state.starColor}` }}\n            >\n              <i className=\"far fa-star\"></i>\n            </button>\n            <span className=\"divider\"></span>\n            <span className=\"group\">Chingu</span>\n            <span className=\"divider\"></span>\n            <div className=\"full-team\">\n              <Team\n                teamMembers={this.state.team}\n                deleteMember={this.deleteMember}\n              />\n              <div className=\"team-size\">{this.state.team.length}</div>\n\n              <button className=\"invite-btn\" onClick={this.handleInviteMember}>\n                <i className=\"fas fa-user-plus\"></i>Invite\n              </button>\n\n              {inviteMember && (\n                <BoardTitleMenu\n                  handleShowMenu={this.handleInviteMember}\n                  handleNameSubmit={this.handleMemberSubmit}\n                  title={\"Add a Member\"}\n                  inputLabel={\"Name\"}\n                  placeholder={\"Enter name\"}\n                  buttonLabel={\"Add\"}\n                />\n              )}\n            </div>\n          </div>\n\n          <button\n            className=\"btn-nav board-nav--menu\"\n            onClick={this.toggleCloseButton}\n          >\n            <i className=\"fas fa-ellipsis-h\"></i>Show Menu\n          </button>\n          {showNameMenu && (\n            <BoardTitleMenu\n              handleShowMenu={this.handleShowMenu}\n              handleNameSubmit={this.handleNameSubmit}\n              title={\"Rename Board\"}\n              inputLabel={\"Name\"}\n              placeholder={BoardName}\n              buttonLabel={\"Rename\"}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BoardNav;\n\n// {this.state.team.map((member)=>\n//   <Team\n//     teamMembers={this.state.team} key={member.name}/>\n//   )}\n","import React from \"react\";\n\nconst TrelloNav = () => (\n    <div className=\"trello-nav\">\n      <h1 className=\"trello-nav--title\"><i className=\"fas fa-dragon\"></i>Dragon</h1>\n    </div>\n  );\n  \n  export default TrelloNav;","import React from \"react\";\n\nconst CardForm = ({\n  cardVal,\n  handleCardValChange,\n  addToCard,\n  toggleCardForm\n}) => (\n  <form className=\"card--form\" onSubmit={addToCard}>\n    <textarea\n      rows=\"3\"\n      value={cardVal}\n      onChange={handleCardValChange}\n      placeholder=\"Enter a title for this card...\"\n    />\n    <button type=\"submit\">Add Card</button>\n    <span className=\"cancel-btn\" onClick={toggleCardForm}>\n    <i className=\"fas fa-times\"></i>\n    </span>\n  </form>\n);\n\nexport default CardForm;\n","import React, { Component } from 'react';\n\nclass ListItem extends Component {\n\n    state = {\n        isEditable: false,\n        textValue:'',\n        itemPosition:''\n    }\n\n    componentDidMount = () => {\n        if (this.props.item !== this.state.textValue) {\n            this.setState({ textValue : this.props.item });\n        }\n    }    \n\n    onClickTextField = (textValue) => {\n        this.setState({ isEditable : true });\n    }\n\n    onChangeTextField = (textValue) => {\n        this.setState({ textValue });\n    }\n\n    handleTextFormSubmit = (index, complete) => {\n        if (this.state.textValue === '') {\n            this.props.onDeleteCheckListItem(this.props.index);\n        } else {\n        const editedChecklistItem = {item: this.state.textValue, complete}\n        this.props.editCheckListItem(index, editedChecklistItem);\n        }\n        this.setState({ isEditable: false });\n    }\n\n    render() {\n        const {item, complete, onDeleteCheckListItem, onToggleCheckBox, index} = this.props;\n        return (\n            <li className=\"checklist__item\">\n                <input \n                        type=\"checkbox\" name=\"item\" \n                        value={item} \n                        checked={complete} \n                        onChange={()=>onToggleCheckBox(index)}\n                        className=\"checklist__complete\"\n                />\n                {(this.state.isEditable ? (\n                    <form onSubmit={(e)=> {\n                        e.preventDefault();\n                        this.handleTextFormSubmit(index, complete);\n                        }}>\n                        <input \n                            type='text' \n                            value={this.state.textValue} \n                            onChange={(e)=> {\n                                this.onChangeTextField(e.target.value);\n                            }}\n                        />\n                    </form>\n                ) : (\n                    <p className=\"checklist__name\" onClick={()=> {this.onClickTextField(item)}}>{item}</p>\n                ))}\n                <button className=\"btn btn--checklist-delete\" onClick={()=>onDeleteCheckListItem(index)}><i className=\"fas fa-times close-item\"></i></button>\n            </li>\n        );\n    }\n}\n\nexport default ListItem;","import React, { Component } from \"react\";\nimport ListItem from \"./ListItem\";\n\nconst _calculatePercent = items => {\n  let tasksDone = items.reduce(\n    (acc, item) => (item.complete ? acc + 1 : acc),\n    0\n  );\n  let progressPct = parseInt((tasksDone / items.length) * 100);\n  return progressPct;\n};\n\nclass CheckList extends Component {\n  state = {\n    addingNewItem: false,\n    editingTitle: false,\n    checkListTitle: \"\"\n  };\n\n  componentDidMount = () => {\n    if (this.props.checkList.title !== this.state.checkListTitle) {\n      this.setState({ checkListTitle: this.props.checkList.title });\n    }\n  };\n\n  handleTitleSubmitForm = () => {\n    this.props.changeCheckListTitle(this.state.checkListTitle);\n    this.setState({ editingTitle: false });\n  };\n\n  addNewCheckListItem = listItem => {\n    if (listItem) {\n      this.props.addCheckListItem({ item: listItem, complete: false });\n    }\n    this.setState({ addingNewItem: false });\n  };\n\n  onChangeTitleForm = title => {\n    if (title) this.setState({ checkListTitle: title });\n  };\n\n  toggleCheckListTitle = () => this.setState({ editingTitle: true });\n  toggleNewItem = () => this.setState({ addingNewItem: true });\n\n  render() {\n    const {\n      checkList,\n      deleteCheckList,\n      onToggleCheckBox,\n      editCheckListItem,\n      onDeleteCheckListItem\n    } = this.props;\n    const checkListExists = checkList && checkList.tasks;\n    let progressPct =\n      checkList.tasks.length !== 0 ? _calculatePercent(checkList.tasks) : false;\n    let percentageComplete = progressPct ? { width: `${progressPct}%` } : {};\n    return (\n      <div className=\"checklist\">\n        <div className=\"checklist__heading\">\n          {!this.state.editingTitle ? (\n            <h2\n              className=\"checklist__title\"\n              // onClick={this.toggleCheckListTitle}\n            >\n              <i className=\"far fa-check-square left-side-icons\"></i>\n              {checkList.title}\n            </h2>\n          ) : (\n            <form\n              onSubmit={e => {\n                e.preventDefault();\n                this.handleTitleSubmitForm();\n              }}\n            >\n              <input\n                type=\"text\"\n                value={this.state.checkListTitle}\n                onChange={e => {\n                  e.preventDefault();\n                  this.onChangeTitleForm(e.target.value);\n                }}\n              />\n            </form>\n          )}\n          <button\n            className=\"btn btn--checklist-edit\"\n            onClick={this.toggleCheckListTitle}\n          >\n            Edit...\n          </button>\n          <button\n            className=\"btn btn--checklist-delete\"\n            onClick={deleteCheckList}\n          >\n            Delete...\n          </button>\n        </div>\n        <div className=\"checklist-content\">\n          {\n            // progressPct != 0 &&\n            <div className=\"progress-bar\">\n              <div className=\"progress-bar__inner\" style={percentageComplete}>\n                <span className=\"progress-percent-display\">\n                  {progressPct == 0 ? \"\\xa0\" : progressPct + \"%\"}\n                </span>\n              </div>\n            </div>\n          }\n          <ul className=\"checklist__items\">\n            {checkListExists &&\n              checkList.tasks.map((checklistItem, index) => (\n                <ListItem\n                  key={index}\n                  index={index}\n                  checklistItem={checklistItem}\n                  item={checklistItem.item}\n                  complete={checklistItem.complete}\n                  onToggleCheckBox={onToggleCheckBox}\n                  editCheckListItem={editCheckListItem}\n                  onDeleteCheckListItem={onDeleteCheckListItem}\n                />\n              ))}\n          </ul>\n          {!this.state.addingNewItem ? (\n            <p\n              className=\"add-new-checkList__placeholder\"\n              onClick={this.toggleNewItem}\n            >\n              Add an item...\n            </p>\n          ) : (\n            <form\n              className=\"add-new-checkList\"\n              placeholder=\"Add an item...\"\n              onSubmit={e => {\n                e.preventDefault();\n                this.addNewCheckListItem(e.target.elements.addItem.value);\n              }}\n            >\n              <input type=\"text\" name=\"addItem\" />\n              <button className=\"btn btn--submit\">Add</button>\n            </form>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckList;\n","import React, { Component } from \"react\";\nimport \"react-dates/initialize\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"../CardModal/datepicker.css\";\nimport moment from \"moment\";\nimport CheckList from \"../Card/CheckList\";\nimport { connect } from \"react-redux\";\nimport { deleteCard } from \"../../actions/cardActions\";\n\nconst dateStyle = {\n  width: \"75px\",\n  height: \"30px\"\n};\n\nclass CardModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calendarFocused: false,\n      isSubmitted: this.props.card.description ? true : false,\n      isEdit: this.props.card.description ? true : false,\n      descripton: \"\"\n    };\n  }\n\n  onDateChange = createdAt => {\n    const editedCard = { ...this.props.card, dueDate: createdAt };\n    this.props.editCard(this.props.card.id, editedCard);\n  };\n\n  onCalendarFocusChange = ({ focused }) => {\n    this.setState(() => ({ calendarFocused: focused }));\n  };\n  createNewCheckList = () => {\n    const newCheckList = {\n      title: \"To-Do\",\n      tasks: []\n    };\n    const editedCard = {\n      ...this.props.card,\n      checkList: newCheckList\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  deleteCheckList = () => {\n    const editedCard = {\n      ...this.props.card\n    };\n    delete editedCard.checkList;\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  addCheckListItem = itemToAdd => {\n    if (itemToAdd) {\n      const tasks = [...this.props.card.checkList.tasks, itemToAdd];\n      const newCheckList = { ...this.props.card.checkList, tasks };\n      const editedCard = {\n        ...this.props.card,\n        checkList: newCheckList\n      };\n      this.props.editCard(this.props.cardId, editedCard);\n    }\n  };\n\n  changeCheckListTitle = title => {\n    const checkList = {\n      ...this.props.card.checkList,\n      title\n    };\n    const editedCard = {\n      ...this.props.card,\n      checkList\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  editCheckListItem = (position, editedCheckList) => {\n    const tasks = this.props.card.checkList.tasks.map((checklistItem, index) =>\n      index !== position ? checklistItem : editedCheckList\n    );\n\n    const editedCard = {\n      ...this.props.card,\n      checkList: {\n        title: this.props.card.checkList.title,\n        tasks\n      }\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  // onChangeCheckListItem = itemClicked => {\n  //     this.props.onChangeCheckListItem(this.props.cardId, itemClicked);\n  // }\n\n  onDeleteCheckListItem = index => {\n    const tasks = this.props.card.checkList.tasks.filter(\n      (item, currIndex) => currIndex !== index\n    );\n    const editedCard = {\n      ...this.props.card,\n      checkList: {\n        title: this.props.card.checkList.title,\n        tasks\n      }\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  onToggleCheckBox = index => {\n    const toggledCheckListItem = this.props.card.checkList.tasks[index];\n    const editedCheckListItem = {\n      item: toggledCheckListItem.item,\n      complete: !toggledCheckListItem.complete\n    };\n    const tasks = this.props.card.checkList.tasks.map((item, currIndex) => {\n      return currIndex === index ? editedCheckListItem : item;\n    });\n    const editedCard = {\n      ...this.props.card,\n      checkList: {\n        title: this.props.card.checkList.title,\n        tasks\n      }\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n  };\n\n  handleDescriptionChange = e => {\n    const description = e.target.value;\n    this.setState({ description });\n  };\n\n  submitDescription = e => {\n    e.preventDefault();\n    const { description } = this.state;\n\n    const editedCard = {\n      ...this.props.card,\n      description\n    };\n    this.props.editCard(this.props.cardId, editedCard);\n\n    if (description || description === \"\") {\n      this.setState({\n        isSubmitted: true,\n        isEdit: true\n      });\n    }\n  };\n\n  editDescription = () => {\n    this.setState({\n      isSubmitted: false,\n      isEdit: true\n    });\n  };\n\n  render() {\n    const currentDate = moment();\n    const {\n      card,\n      isModalOpen,\n      toggleModal,\n      cardId,\n      list,\n      content\n    } = this.props;\n    const { isSubmitted, isEdit } = this.state;\n    return (\n      <div\n        className=\"card-modal\"\n        style={{ display: isModalOpen === cardId ? \"block\" : \"none\" }}\n      >\n        <div className=\"card-modal__content\">\n          <div className=\"card-modal__content-title modal-elements\">\n            <h4>\n              <i className=\"far fa-window-maximize left-side-icons\"></i>\n              <span>{card.content}</span>\n            </h4>\n            <button onClick={toggleModal}>\n              <i className=\"fas fa-times close-modal\"></i>\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"left-col\">\n              <div className=\"card__details\">\n                {card.dueDate && (\n                  <div className=\"card__due-date\">\n                    <h3 className=\"due-date__title\">\n                      <i className=\"fa fa-calendar left-side-icons\"></i>Due Date\n                    </h3>\n                    <p\n                      className={\n                        currentDate.isBefore(card.dueDate)\n                          ? \"due-date__date\"\n                          : \"due-date__date due-date__date--overdue\"\n                      }\n                    >\n                      {moment(card.dueDate).format(\"MMM Do YYYY\")}\n                    </p>\n                  </div>\n                )}\n              </div>\n              {/* <div className=\"row\"> */}\n              <section className=\"col double-col\">\n                <div className=\"description\">\n                  <h5 className=\"modal-elements description__title\">\n                    <i className=\"fas fa-align-left left-side-icons\"></i>\n                    Description{\" \"}\n                    {// show edit button when isSubmited is false and isEdit is true\n                    !isSubmitted ||\n                      (isEdit && (\n                        <span onClick={this.editDescription}>Edit</span>\n                      ))}\n                  </h5>\n                  {// if isSubmitted is false, show form. Else, hide form and show description\n                  !isSubmitted && (\n                    <form\n                      className=\"description__form\"\n                      onSubmit={this.submitDescription}\n                    >\n                      <textarea\n                        rows=\"5\"\n                        autoFocus={isEdit}\n                        onFocus={e => {\n                          let val = e.target.value;\n                          e.target.value = \"\";\n                          e.target.value = val;\n                        }}\n                        className=\"description__form-textarea\"\n                        defaultValue={card.description}\n                        placeholder=\"Add a more detailed description...\"\n                        onChange={this.handleDescriptionChange}\n                      ></textarea>\n                      <button>Save</button>\n                    </form>\n                  )}\n                  {isSubmitted && <p>{card.description}</p>}\n                </div>\n                {card.checkList && (\n                  <CheckList\n                    style={dateStyle}\n                    checkList={card.checkList}\n                    onToggleCheckBox={this.onToggleCheckBox}\n                    addCheckListItem={this.addCheckListItem}\n                    onDeleteCheckListItem={this.onDeleteCheckListItem}\n                    editCheckListItem={this.editCheckListItem}\n                    deleteCheckList={this.deleteCheckList}\n                    changeCheckListTitle={this.changeCheckListTitle}\n                  />\n                )}\n              </section>\n            </div>\n\n            <div className=\"right-col\">\n              <aside className=\"col\">\n                <p className=\"modal-aside-title\">add to card</p>\n                <button\n                  onClick={this.createNewCheckList}\n                  disabled={card.checkList}\n                >\n                  <i className=\"fa fa-check-square\"></i> <span>Checklist</span>\n                </button>\n\n                <div className=\"datePicker__wrapper\">\n                  <div className=\"datePicker__icon\">\n                    <i className=\"fa fa-calendar-alt\"></i>\n                  </div>\n                  <SingleDatePicker\n                    placeholder={\"Due Date\"}\n                    readOnly={true}\n                    date={this.state.createdAt}\n                    onDateChange={this.onDateChange}\n                    focused={this.state.calendarFocused}\n                    onFocusChange={this.onCalendarFocusChange}\n                    hideKeyboardShortcutsPanel={true}\n                    numberOfMonths={1}\n                    isOutsideRange={() => false}\n                  />\n                </div>\n\n                <p className=\"modal-aside-title\">actions</p>\n                <button\n                  onClick={() => {\n                    if (window.confirm(\"Delete \" + content + \"?\")) {\n                      this.props.deleteCard(cardId, list);\n                    }\n                  }}\n                >\n                  <i className=\"fa fa-trash\"></i> <span>Delete</span>\n                </button>\n              </aside>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { deleteCard })(CardModal);\n","import { ADD_CARD, DELETE_CARD, EDIT_CARD } from \"./types\";\n\nexport const addCard = (id, cardContent) => {\n  return {\n    type: ADD_CARD,\n    id,\n    cardContent\n  };\n};\n\nexport const deleteCard = (cardName, list) => {\n  return {\n    type: DELETE_CARD,\n    cardName,\n    list\n  };\n};\n\nexport const editCard = (id, editedCard) => {\n  return {\n    type: EDIT_CARD,\n    id,\n    editedCard\n  };\n};\n","// LISTS\nexport const ADD_LIST = \"ADD_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const HANDLE_LIST_TITLE = \"HANDLE_LIST_TITLE\";\nexport const COPY_LIST = \"COPY_LIST\";\n\n// CARDS\nexport const ADD_CARD = \"ADD_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const EDIT_CARD = \"EDIT_CARD\";\n\n// DRAG & DROP\nexport const HANDLE_DRAG_AND_DROP = \"HANDLE_DRAG_AND_DROP\";\n","import React, { Fragment } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardModal from \"../CardModal/CardModal\";\n\nexport default class Card extends React.Component {\n  render() {\n    const {\n      toggleModal,\n      isModalOpen,\n      content,\n      editCard,\n      cardId,\n      list,\n      card\n    } = this.props;\n    return (\n      <Fragment>\n        <Draggable draggableId={this.props.cardId} index={this.props.index}>\n          {provided => (\n            <li\n              className=\"card\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n              onClick={() => {\n                toggleModal(this.props.cardId);\n              }}\n            >\n              {provided.placeholder}\n              {content}\n              {/* </li> */}\n            </li>\n          )}\n        </Draggable>\n        <CardModal\n          disableInteractiveElementBlocking={true}\n          isDragDisabled={isModalOpen !== \"\" ? false : true}\n          draggableProps={null}\n          dragHandleProps={null}\n          content={content}\n          cardId={cardId}\n          list={list}\n          card={card}\n          toggleModal={toggleModal}\n          isModalOpen={isModalOpen}\n          editCard={editCard}\n        />\n      </Fragment>\n    );\n  }\n}\n","import { ADD_LIST, DELETE_LIST, HANDLE_LIST_TITLE, COPY_LIST } from \"./types\";\n\nexport const addList = () => {\n  return {\n    type: ADD_LIST\n  };\n};\n\nexport const deleteList = id => {\n  return {\n    type: DELETE_LIST,\n    id\n  };\n};\n\nexport const handleListTitleChange = (id, titleText) => {\n  return {\n    type: HANDLE_LIST_TITLE,\n    id,\n    titleText\n  };\n};\n\nexport const copyList = (idToCopy, title = \"\") => {\n  return {\n    type: COPY_LIST,\n    idToCopy,\n    title\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { copyList, deleteList } from \"../../actions/listActions\";\n\nclass ListMenu extends Component {\n  state = {\n    menuDisplay: \"default\",\n    titleName: \"\"\n  };\n\n  UNSAFE_componentWillMount() {\n    document.addEventListener(\"mousedown\", this.handleToggleListMenu, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleToggleListMenu, false);\n  }\n\n  handleToggleListMenu = e => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    this.props.toggleListMenu();\n  };\n\n  componentDidMount = () => {\n    this.setState({ titleName: this.props.title });\n  };\n\n  displayCopyList = () => {\n    this.setState({ menuDisplay: \"copyList\" });\n  };\n\n  onCopyTitleChange = titleName => {\n    this.setState({ titleName });\n  };\n\n  render = () => {\n    const { toggleListMenu, deleteList, listId } = this.props;\n\n    switch (this.state.menuDisplay) {\n      case \"copyList\":\n        return (\n          <div className=\"list-menu\" ref={node => (this.node = node)}>\n            <header className=\"list-menu__header\">\n              <p className=\"list-menu__header-title\">Copy List</p>\n              <button\n                onClick={toggleListMenu}\n                className=\"list-menu__header-close-btn\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            </header>\n            <section className=\"action-list\">\n              <h4 className=\"copy-list__title\">Name</h4>\n              <div className=\"copy-menu__title-input\">\n                <textarea\n                  onChange={e => {\n                    this.onCopyTitleChange(e.target.value);\n                  }}\n                  className=\"title-input__text\"\n                  value={this.state.titleName}\n                />\n              </div>\n              <button\n                onClick={() => {\n                  let title = this.state.titleName || this.props.title;\n                  this.props.copyList(listId, title);\n                  toggleListMenu();\n                }}\n                className=\"btn--menu btn--submit btn--copy-memu\"\n              >\n                Create List\n              </button>\n            </section>\n          </div>\n        );\n        break;\n      default:\n        return (\n          <div className=\"list-menu\" ref={node => (this.node = node)}>\n            <header className=\"list-menu__header\">\n              <p className=\"list-menu__header-title\">List Actions</p>\n              <button\n                onClick={toggleListMenu}\n                className=\"list-menu__header-close-btn\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            </header>\n            <section className=\"action-list\">\n              <button\n                className=\"action-list__btn\"\n                onClick={this.displayCopyList}\n              >\n                Copy List...\n              </button>\n              <button\n                className=\"action-list__btn\"\n                onClick={() => {\n                  deleteList(listId);\n                }}\n              >\n                Delete List...\n              </button>\n            </section>\n          </div>\n        );\n    }\n  };\n}\n\nexport default connect(null, { copyList, deleteList })(ListMenu);\n","import React, { Component, Fragment } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardForm from \"../Card/CardForm\";\nimport Card from \"../Card/Card\";\nimport ListMenu from \"./ListMenu\";\n\nimport { connect } from \"react-redux\";\nimport { deleteList, handleListTitleChange } from \"../../actions/listActions\";\nimport { addCard } from \"../../actions/cardActions\";\n\nclass List extends Component {\n  state = {\n    isEdit: false,\n    isSubmitted: true,\n    showCardForm: false,\n    cardVal: \"\",\n    listMenuOpen: false,\n    isModalOpen: \"\"\n  };\n\n  toggleModal = cardId => {\n    this.setState(prevState => {\n      return {\n        isModalOpen: prevState.isModalOpen === \"\" ? cardId : \"\"\n      };\n    });\n  };\n\n  UNSAFE_componentWillMount() {\n    document.addEventListener(\"mousedown\", this.handleSaveTitle, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleSaveTitle, false);\n  }\n\n  handleSaveTitle = e => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    // if empty, list will be deleted when user clicks outside out if\n    if (!this.props.list.title && !this.props.list.taskIds.length) {\n      this.props.deleteList(this.props.list.id);\n    } else if (!this.props.list.title) {\n      alert(\"List title cannot be empty\");\n      this.setState({\n        isEdit: true,\n        isSubmitted: false\n      });\n    } else {\n      this.setState({\n        isEdit: false,\n        isSubmitted: true\n      });\n    }\n  };\n\n  componentDidMount = prevProps => {\n    if (prevProps !== this.props) {\n      if (!this.props.isSubmitted) {\n        this.setState({ isSubmitted: false });\n      }\n    }\n  };\n\n  toggleTitleForm = () => {\n    const { isEdit } = this.state;\n    this.setState({\n      isEdit: !isEdit\n    });\n  };\n\n  saveListTitle = e => {\n    e.preventDefault();\n    // if empty alert user\n    if (!this.props.list.title) {\n      alert(\"List title cannot be blank\");\n    }\n    // else set isEdit to false\n    else {\n      this.setState({\n        isEdit: false,\n        isSubmitted: true\n      });\n    }\n  };\n\n  // CARD\n  toggleCardForm = () => {\n    const { showCardForm } = this.state;\n    this.setState({\n      showCardForm: !showCardForm\n    });\n  };\n\n  handleCardValChange = e => {\n    this.setState({\n      cardVal: e.target.value\n    });\n  };\n\n  addToCard = e => {\n    e.preventDefault();\n    const { cardVal } = this.state;\n    // if cardVal is empty, alert user\n    if (!cardVal) {\n      alert(\"please add a card\");\n    } else {\n      this.props.addCard(this.props.list.id, cardVal);\n      this.setState({\n        cardVal: \"\"\n      });\n    }\n    this.setState({\n      showCardForm: !this.state.showCardForm\n    });\n  };\n\n  toggleListMenu = () => {\n    this.setState({\n      listMenuOpen: !this.state.listMenuOpen\n    });\n  };\n\n  render() {\n    const {\n      isEdit,\n      isSubmitted,\n      showCardForm,\n      cardVal,\n      listMenuOpen,\n      isModalOpen\n    } = this.state;\n    const { id, title } = this.props.list;\n    const { cardList } = this.props;\n    return (\n      <Draggable\n        draggableId={this.props.listId}\n        index={this.props.index}\n        isDragDisabled={isModalOpen}\n      >\n        {provided => (\n          <div\n            className=\"list\"\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n          >\n            <div className=\"list--title\" ref={node => (this.node = node)}>\n              {// if form has not been submitted, show form. Also, show form if isEdit is true\n              !isSubmitted || isEdit ? (\n                <form onSubmit={this.saveListTitle} className=\"list--form\">\n                  <input\n                    type=\"text\"\n                    className=\"list--form-input\"\n                    autoFocus={true}\n                    value={title}\n                    onChange={e =>\n                      this.props.handleListTitleChange(id, e.target.value)\n                    }\n                  />\n                  {// if editing list title, no need to show \"Add List\" button\n                  !isEdit && <button>Add List</button>}\n                  {isEdit && <button>Edit List</button>}\n                </form>\n              ) : (\n                <Fragment>\n                  <h3 onClick={this.toggleTitleForm}>{title}</h3>\n                  <button\n                    className=\"open-list-menu-btn\"\n                    onClick={this.toggleListMenu}\n                  >\n                    <i className=\"fas fa-ellipsis-h fa-sm\"></i>\n                  </button>\n                  {listMenuOpen && (\n                    <ListMenu\n                      toggleListMenu={this.toggleListMenu}\n                      listId={id}\n                      title={title}\n                    />\n                  )}\n                </Fragment>\n              )}\n            </div>\n            {provided.placeholder}\n\n            {\n              <Droppable droppableId={this.props.listId} type=\"task\">\n                {provided => (\n                  <ul\n                    className=\"card-list\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {provided.placeholder}\n                    {cardList.map((card, index) => (\n                      <Card\n                        key={card.id}\n                        cardId={card.id}\n                        content={card.content}\n                        index={index}\n                        card={card}\n                        list={this.props.list}\n                        editCard={this.props.editCard}\n                        toggleModal={this.toggleModal}\n                        isModalOpen={this.state.isModalOpen}\n                      >\n                        {/* {provided.placeholder} */}\n                      </Card>\n                    ))}\n                    {/* </ul> */}\n                  </ul>\n                )}\n              </Droppable>\n            }\n\n            {// if showCardForm is true, show form\n            showCardForm && (\n              <CardForm\n                cardVal={cardVal}\n                handleCardValChange={this.handleCardValChange}\n                addToCard={this.addToCard}\n                toggleCardForm={this.toggleCardForm}\n              />\n            )}\n\n            {// if isSubmitted is true, user can click \"Add a card\" to toggle form\n            isSubmitted && !showCardForm && (\n              <p className=\"add-card-btn\" onClick={this.toggleCardForm}>\n                + <span>Add a card...</span>\n              </p>\n            )}\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default connect(null, { deleteList, handleListTitleChange, addCard })(\n  List\n);\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport SimpleStorage from \"react-simple-storage\";\nimport \"normalize.css\";\nimport \"./App.scss\";\n\nimport \"./App.scss\";\nimport BoardNav from \"./Component/BoardNav/BoardNav.js\";\nimport TrelloNav from \"./Component/TrelloNav.js\";\n\nimport List from \"./Component/List/List\";\n\nimport Scene3 from \"./Component/Background/images/scene3.jpg\";\n\nimport { connect } from \"react-redux\";\nimport { addList } from \"./actions/listActions\";\nimport { editCard } from \"./actions/cardActions\";\nimport { handleDragAndDrop } from \"./actions/dragAndDropActions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      styleType: { backgroundImage: `url(${Scene3})` },\n      backgroundType: \"\"\n    };\n  }\n\n  handleBackgroundColor = () => {\n    this.setState({ backgroundType: \"Colors\" });\n  };\n\n  handleBackgroundImage = () => {\n    this.setState({ backgroundType: \"Images\" });\n  };\n\n  handleBackgroundChange = newBackground => {\n    let styleType =\n      this.state.backgroundType === \"Colors\"\n        ? { backgroundColor: `${newBackground}` }\n        : { backgroundImage: `url(${newBackground})` };\n    this.setState({ styleType });\n  };\n\n  addList = () => {\n    this.props.addList();\n  };\n\n  editCard = (id, editedCard) => {\n    this.props.editCard(id, editedCard);\n  };\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    this.props.handleDragAndDrop(destination, source, draggableId, type);\n  };\n\n  render() {\n    const { styleType } = this.state;\n    const { lists, cards, listOrder } = this.props.state.state;\n    return (\n      <div className=\"App\" style={styleType}>\n        <SimpleStorage parent={this} prefix={\"Geckos14_Trello_Clone\"} />\n        <TrelloNav />\n        <BoardNav\n          handleBackgroundChange={this.handleBackgroundChange}\n          handleBackgroundColor={this.handleBackgroundColor}\n          handleBackgroundImage={this.handleBackgroundImage}\n        />\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable\n            droppableId=\"all-columns\"\n            direction=\"horizontal\"\n            type=\"column\"\n            key={lists.id}\n          >\n            {provided => (\n              <div\n                className=\"App-header\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {listOrder.map((listId, index) => {\n                  const list = lists[listId];\n                  const cardList = list.taskIds.map(id => cards[id]);\n                  return (\n                    <List\n                      isSubmitted={list.title === \"\" ? false : true}\n                      key={list.id}\n                      listId={list.id}\n                      list={list}\n                      cardList={cardList}\n                      editCard={this.editCard}\n                      index={index}\n                    >\n                      {provided.placeholder}\n                    </List>\n                  );\n                })}\n\n                <button className=\"add-list-btn\" onClick={this.addList}>\n                  + Add another list\n                </button>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addList,\n  editCard,\n  handleDragAndDrop\n})(App);\n","import { HANDLE_DRAG_AND_DROP } from \"./types\";\n\nexport const handleDragAndDrop = (destination, source, draggableId, type) => {\n  return {\n    type: HANDLE_DRAG_AND_DROP,\n    payload: {\n      destination,\n      source,\n      draggableId,\n      type\n    }\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuid from \"uuid\";\nimport {\n  ADD_LIST,\n  DELETE_LIST,\n  HANDLE_LIST_TITLE,\n  COPY_LIST,\n  ADD_CARD,\n  DELETE_CARD,\n  HANDLE_DRAG_AND_DROP,\n  EDIT_CARD\n} from \"../actions/types\";\n\nconst initialState = {\n  cards: {\n    // sample_card: {\n    //   id: \"sample_card\",\n    //   content: \"Sample Card\"\n    // }\n  },\n  lists: {\n    // sample_list: {\n    //   id: \"sample_list\",\n    //   title: \"Sample List\",\n    //   taskIds: [\"sample_card\"]\n    // }\n  },\n  listOrder: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_LIST: {\n      const { lists } = state;\n      const listId = uuid().replace(/-/g, \"\");\n      const newList = Object.assign(lists, {\n        [listId]: {\n          id: listId,\n          title: \"\",\n          taskIds: []\n        }\n      });\n      let newListOrder = \"\";\n      // adds the created list inside the listOrder array\n      for (let list in lists) {\n        newListOrder = [...state.listOrder, list];\n      }\n      return {\n        ...state,\n        lists: newList,\n        listOrder: newListOrder\n      };\n    }\n    case DELETE_LIST: {\n      const { cards, lists, listOrder } = state;\n      const taskIds = lists[action.id].taskIds;\n      const newCards = { ...cards };\n      taskIds.forEach(taskId => delete newCards[taskId]);\n      const newLists = { ...lists };\n      delete newLists[action.id];\n      let index = listOrder.indexOf(action.id);\n      let newListOrder = [...listOrder];\n      newListOrder.splice(index, 1);\n      return {\n        ...state,\n        cards: newCards,\n        lists: newLists,\n        listOrder: newListOrder\n      };\n    }\n    case HANDLE_LIST_TITLE: {\n      const { lists } = state;\n      for (let list in lists) {\n        if (lists[list].id === action.id) {\n          lists[list].title = action.titleText;\n        }\n      }\n      return {\n        ...state,\n        lists\n      };\n    }\n    case COPY_LIST: {\n      // We need to make copies of the cards from the original List, and add those to the list copy.\n      const copyCards = cardsToCopy => {\n        const cards = { ...state.cards };\n        const taskIds = [];\n        cardsToCopy.forEach(card => {\n          const id = uuid().replace(/-/g, \"\");\n          cards[id] = { ...cards[card] };\n          cards[id].id = id;\n          taskIds.push(id);\n        });\n        return { cards, taskIds };\n      };\n\n      const id = uuid().replace(/-/g, \"\");\n      const listCopy = { ...state.lists[action.idToCopy] };\n      listCopy.id = id;\n      if (action.title) {\n        listCopy.title = action.title;\n      }\n      const index = state.listOrder.indexOf(action.idToCopy);\n      const lists = { ...state.lists, [id]: listCopy };\n      const { cards, taskIds } = copyCards(listCopy.taskIds);\n      lists[id].taskIds = taskIds;\n      const listOrder = state.listOrder\n        .slice(0, index + 1)\n        .concat(id)\n        .concat(state.listOrder.slice(index + 1));\n      return {\n        ...state,\n        cards,\n        lists,\n        listOrder\n      };\n    }\n    case ADD_CARD: {\n      const { cards, lists } = state;\n      // generate new card id\n      const cardId = uuid().replace(/-/g, \"\");\n      // make a new card\n      const newCard = {\n        [cardId]: {\n          id: cardId,\n          content: action.cardContent\n        }\n      };\n      // add the new card inside the cards object\n      Object.assign(cards, newCard);\n\n      for (let list in lists) {\n        if (lists.hasOwnProperty(list)) {\n          if (lists[list].id === action.id) {\n            for (let card in newCard) {\n              lists[list].taskIds = [...lists[list].taskIds, card];\n            }\n          }\n        }\n      }\n      return {\n        ...state,\n        cards,\n        lists\n      };\n    }\n    // case ADD_CARD_DESCRIPTION: {\n    //   const { cards } = state;\n    //   for (let card in cards) {\n    //     if (cards[card].id === action.id) {\n    //       Object.assign(cards[card], { description: action.description });\n    //     }\n    //   }\n    //   return {\n    //     ...state,\n    //     cards: { ...cards }\n    //   };\n    // }\n    case DELETE_CARD: {\n      const newTaskIds = action.list.taskIds.filter(\n        task => task !== action.cardName\n      );\n      const newCards = { ...state.cards };\n      delete newCards[action.cardName];\n      const listCopy = { ...state.lists };\n      for (let key in listCopy) {\n        if (listCopy[key].id === action.list.id) {\n          listCopy[key] = { ...action.list, taskIds: newTaskIds };\n        }\n      }\n      return {\n        ...state,\n        cards: newCards,\n        lists: listCopy\n      };\n    }\n    case EDIT_CARD: {\n      const cards = { ...state.cards };\n      const { id, editedCard } = action;\n      cards[id] = editedCard;\n      return {\n        ...state,\n        cards\n      };\n    }\n    case HANDLE_DRAG_AND_DROP: {\n      const { destination, source, draggableId, type } = action.payload;\n\n      if (type === \"column\") {\n        const newListOrder = Array.from(state.listOrder);\n        newListOrder.splice(source.index, 1);\n        newListOrder.splice(destination.index, 0, draggableId);\n\n        const newState = {\n          ...state,\n          listOrder: newListOrder\n        };\n        return newState;\n      }\n      const home = state.lists[source.droppableId];\n      const foreign = state.lists[destination.droppableId];\n\n      if (home === foreign) {\n        const newCardIds = Array.from(home.taskIds);\n        newCardIds.splice(source.index, 1);\n        newCardIds.splice(destination.index, 0, draggableId);\n\n        const newList = {\n          ...home,\n          taskIds: newCardIds\n        };\n        const newState = {\n          ...state,\n          lists: {\n            ...state.lists,\n            [newList.id]: newList\n          }\n        };\n        return newState;\n      }\n\n      // Moving from one list to another\n      const homeTaskIds = Array.from(home.taskIds);\n      homeTaskIds.splice(source.index, 1);\n\n      const newHome = {\n        ...home,\n        taskIds: homeTaskIds\n      };\n\n      const foreignTaskIds = Array.from(foreign.taskIds);\n      foreignTaskIds.splice(destination.index, 0, draggableId);\n\n      const newForegin = {\n        ...foreign,\n        taskIds: foreignTaskIds\n      };\n\n      const newState = {\n        ...state,\n        lists: {\n          ...state.lists,\n          [newHome.id]: newHome,\n          [newForegin.id]: newForegin\n        }\n      };\n\n      return newState;\n\n      //   return {\n      //     ...state\n      //   };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport cardListReducer from \"./CardListReducer\";\n\nexport default combineReducers({\n  state: cardListReducer\n});\n","import { createStore, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\n\n// const initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  // initialState,\n  persistedState,\n  compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/scene3.4be96530.jpg\";"],"sourceRoot":""}